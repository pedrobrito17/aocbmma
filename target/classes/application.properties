server.port=8080

# ================================================= =============
# = Banco de dados do VPS Weblink
# ================================================= =============
# spring.datasource.url=jdbc:mysql://31.220.61.60/bd_aocbmma
# spring.datasource.username=root
# spring.datasource.password=#Fsadu17882605

# ================================================= =============
# = Banco de dados local
# ================================================= =============
spring.datasource.url=jdbc:mysql://localhost/bd_aocbmma
spring.datasource.username=root
spring.datasource.password=fsadu

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.database=mysql

#Define o tamanho m√°ximo para envio de arquivos
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=200MB

# ================================================= =============
# = Propriedades do Java Mail
# ================================================= =============
spring.mail.host=smtp.weblink.com.br
spring.mail.port=587
spring.mail.username=contato@aocbmma.com.br
spring.mail.password=@miguel10
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=false
spring.mail.test-connection=true

# ================================================= =============
# = Spring Security / Consultas para AuthenticationManagerBuilder
# ================================================= =============
spring.queries.users-query = select d.email, s.senha, s.ativo from socio s inner join dados_contato d on s.id = d.socio_id where d.email =?
spring.queries.roles-query = select d.email, r.role from socio u inner join dados_contato d on (u.id=d.socio_id) inner join socio_role ur on (u.id = ur.socio_id) inner join role r on (ur.role_id = r.id) where d.email =?


